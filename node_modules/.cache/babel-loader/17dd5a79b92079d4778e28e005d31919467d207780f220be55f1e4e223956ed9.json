{"ast":null,"code":"var _jsxFileName = \"/Users/nishthagoswami/Desktop/ramp-fe-challenge/src/components/Transactions/index.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = ({\n  transactions,\n  getApprovalState,\n  setApprovalState\n}) => {\n  _s();\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const [approvedStatus, setApprovedStatus] = useState({}); // New state to keep track of approval status\n\n  const setTransactionApproval = useCallback(async ({\n    transactionId,\n    newValue\n  }) => {\n    await fetchWithoutCache(\"setTransactionApproval\", {\n      transactionId,\n      value: newValue\n    });\n  }, [fetchWithoutCache]);\n  if (transactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      approved: getApprovalState(transaction.id),\n      setTransactionApproval: async approved => await setApprovalState(transaction.id, approved)\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"F+3WnGwu1ovaVp9QhMJM9q8XT3s=\", false, function () {\n  return [useCustomFetch];\n});\n_c = Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useState","useCustomFetch","TransactionPane","jsxDEV","_jsxDEV","Transactions","transactions","getApprovalState","setApprovalState","_s","fetchWithoutCache","loading","approvedStatus","setApprovedStatus","setTransactionApproval","transactionId","newValue","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","transaction","approved","id","_c","$RefreshReg$"],"sources":["/Users/nishthagoswami/Desktop/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\"\nimport { SetTransactionApprovalParams } from \"src/utils/types\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\n\nexport const Transactions: TransactionsComponent = ({ transactions, getApprovalState, setApprovalState }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch()\n  const [approvedStatus, setApprovedStatus] = useState({})  // New state to keep track of approval status\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue,\n      })\n    },\n    [fetchWithoutCache]\n  )\n\n  if (transactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {transactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          approved={getApprovalState(transaction.id)}\n          setTransactionApproval={async (approved) => await setApprovalState(transaction.id, approved)}\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,SAASC,cAAc,QAAQ,0BAA0B;AAEzD,SAASC,eAAe,QAAQ,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnD,OAAO,MAAMC,YAAmC,GAAGA,CAAC;EAAEC,YAAY;EAAEC,gBAAgB;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC3G,MAAM;IAAEC,iBAAiB;IAAEC;EAAQ,CAAC,GAAGV,cAAc,CAAC,CAAC;EACvD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;;EAE1D,MAAMc,sBAAsB,GAAGf,WAAW,CACxC,OAAO;IAAEgB,aAAa;IAAEC;EAAS,CAAC,KAAK;IACrC,MAAMN,iBAAiB,CAAqC,wBAAwB,EAAE;MACpFK,aAAa;MACbE,KAAK,EAAED;IACT,CAAC,CAAC;EACJ,CAAC,EACD,CAACN,iBAAiB,CACpB,CAAC;EAED,IAAIJ,YAAY,KAAK,IAAI,EAAE;IACzB,oBAAOF,OAAA;MAAKc,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjE;EAEA,oBACEnB,OAAA;IAAK,eAAY,uBAAuB;IAAAe,QAAA,EACrCb,YAAY,CAACkB,GAAG,CAAEC,WAAW,iBAC5BrB,OAAA,CAACF,eAAe;MAEduB,WAAW,EAAEA,WAAY;MACzBd,OAAO,EAAEA,OAAQ;MACjBe,QAAQ,EAAEnB,gBAAgB,CAACkB,WAAW,CAACE,EAAE,CAAE;MAC3Cb,sBAAsB,EAAE,MAAOY,QAAQ,IAAK,MAAMlB,gBAAgB,CAACiB,WAAW,CAACE,EAAE,EAAED,QAAQ;IAAE,GAJxFD,WAAW,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKpB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAd,EAAA,CA/BYJ,YAAmC;EAAA,QACPJ,cAAc;AAAA;AAAA2B,EAAA,GAD1CvB,YAAmC;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}