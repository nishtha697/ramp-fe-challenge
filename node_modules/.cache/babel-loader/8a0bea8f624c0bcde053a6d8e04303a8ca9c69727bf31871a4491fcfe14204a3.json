{"ast":null,"code":"var _jsxFileName = \"/Users/nishthagoswami/Desktop/ramp-fe-challenge/src/components/InputSelect/index.tsx\",\n  _s = $RefreshSig$();\nimport Downshift from \"downshift\";\nimport { useCallback, useState, useRef } from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputSelect({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel\n}) {\n  _s();\n  const [selectedValue, setSelectedValue] = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : null);\n  const inputRef = useRef(null); // Create a ref\n  const [dropdownPosition, setDropdownPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const onChange = useCallback(selectedItem => {\n    if (selectedItem === null) {\n      return;\n    }\n    consumerOnChange(selectedItem);\n    setSelectedValue(selectedItem);\n  }, [consumerOnChange]);\n  return /*#__PURE__*/_jsxDEV(Downshift, {\n    id: \"RampSelect\",\n    onChange: onChange,\n    selectedItem: selectedValue,\n    itemToString: item => item ? parseItem(item).label : \"\",\n    children: ({\n      getItemProps,\n      getLabelProps,\n      getMenuProps,\n      isOpen,\n      highlightedIndex,\n      selectedItem,\n      getToggleButtonProps,\n      inputValue\n    }) => {\n      const toggleProps = getToggleButtonProps();\n      const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampInputSelect--root\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"RampText--s RampText--hushed\",\n          ...getLabelProps(),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampBreak--xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampInputSelect--input\",\n          onClick: event => {\n            setDropdownPosition(getDropdownPosition(event.target));\n            toggleProps.onClick(event);\n          },\n          children: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"RampInputSelect--dropdown-container\", {\n            \"RampInputSelect--dropdown-container-opened\": isOpen\n          }),\n          ...getMenuProps(),\n          style: {\n            top: dropdownPosition.top,\n            left: dropdownPosition.left\n          },\n          children: renderItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this);\n      function renderItems() {\n        if (!isOpen) {\n          return null;\n        }\n        if (isLoading) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: [loadingLabel, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 20\n          }, this);\n        }\n        if (items.length === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: \"No items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 20\n          }, this);\n        }\n        return items.map((item, index) => {\n          const parsedItem = parseItem(item);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getItemProps({\n              key: parsedItem.value,\n              index,\n              item,\n              className: classNames(\"RampInputSelect--dropdown-item\", {\n                \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                \"RampInputSelect--dropdown-item-selected\": (parsedSelectedItem === null || parsedSelectedItem === void 0 ? void 0 : parsedSelectedItem.value) === parsedItem.value\n              })\n            }),\n            children: parsedItem.label\n          }, parsedItem.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this);\n        });\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(InputSelect, \"5aAuh69WBvQQbwZ9WXVqU7F52Mc=\");\n_c = InputSelect;\nconst getDropdownPosition = target => {\n  if (target instanceof Element) {\n    const {\n      top,\n      left\n    } = target.getBoundingClientRect();\n    const {\n      scrollY\n    } = window;\n    return {\n      top: scrollY + top + 63,\n      left\n    };\n  }\n  return {\n    top: 0,\n    left: 0\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"InputSelect\");","map":{"version":3,"names":["Downshift","useCallback","useState","useRef","classNames","jsxDEV","_jsxDEV","InputSelect","label","defaultValue","onChange","consumerOnChange","items","parseItem","isLoading","loadingLabel","_s","selectedValue","setSelectedValue","inputRef","dropdownPosition","setDropdownPosition","top","left","selectedItem","id","itemToString","item","children","getItemProps","getLabelProps","getMenuProps","isOpen","highlightedIndex","getToggleButtonProps","inputValue","toggleProps","parsedSelectedItem","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","event","getDropdownPosition","target","style","renderItems","length","map","index","parsedItem","key","value","_c","Element","getBoundingClientRect","scrollY","window","$RefreshReg$"],"sources":["/Users/nishthagoswami/Desktop/ramp-fe-challenge/src/components/InputSelect/index.tsx"],"sourcesContent":["import Downshift from \"downshift\"\nimport { useCallback, useState, useEffect, useRef } from \"react\"\nimport classNames from \"classnames\"\nimport { DropdownPosition, GetDropdownPositionFn, InputSelectOnChange, InputSelectProps } from \"./types\"\n\nexport function InputSelect<TItem>({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel,\n}: InputSelectProps<TItem>) {\n  const [selectedValue, setSelectedValue] = useState<TItem | null>(defaultValue ?? null)\n  const inputRef = useRef<HTMLDivElement>(null);  // Create a ref\n  const [dropdownPosition, setDropdownPosition] = useState<DropdownPosition>({\n    top: 0,\n    left: 0,\n  })\n\n  const onChange = useCallback<InputSelectOnChange<TItem>>(\n    (selectedItem) => {\n      if (selectedItem === null) {\n        return\n      }\n\n      consumerOnChange(selectedItem)\n      setSelectedValue(selectedItem)\n    },\n    [consumerOnChange]\n  )\n\n  return (\n    <Downshift<TItem>\n      id=\"RampSelect\"\n      onChange={onChange}\n      selectedItem={selectedValue}\n      itemToString={(item) => (item ? parseItem(item).label : \"\")}\n    >\n      {({\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue,\n      }) => {\n        const toggleProps = getToggleButtonProps()\n        const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem)\n\n        return (\n          <div className=\"RampInputSelect--root\">\n            <label className=\"RampText--s RampText--hushed\" {...getLabelProps()}>\n              {label}\n            </label>\n            <div className=\"RampBreak--xs\" />\n            <div\n              className=\"RampInputSelect--input\"\n              onClick={(event) => {\n                setDropdownPosition(getDropdownPosition(event.target))\n                toggleProps.onClick(event)\n              }}\n            >\n              {inputValue}\n            </div>\n\n            <div\n              className={classNames(\"RampInputSelect--dropdown-container\", {\n                \"RampInputSelect--dropdown-container-opened\": isOpen,\n              })}\n              {...getMenuProps()}\n              style={{ top: dropdownPosition.top, left: dropdownPosition.left }}\n            >\n              {renderItems()}\n            </div>\n          </div>\n        )\n\n        function renderItems() {\n          if (!isOpen) {\n            return null\n          }\n\n          if (isLoading) {\n            return <div className=\"RampInputSelect--dropdown-item\">{loadingLabel}...</div>\n          }\n\n          if (items.length === 0) {\n            return <div className=\"RampInputSelect--dropdown-item\">No items</div>\n          }\n\n          return items.map((item, index) => {\n            const parsedItem = parseItem(item)\n            return (\n              <div\n                key={parsedItem.value}\n                {...getItemProps({\n                  key: parsedItem.value,\n                  index,\n                  item,\n                  className: classNames(\"RampInputSelect--dropdown-item\", {\n                    \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                    \"RampInputSelect--dropdown-item-selected\":\n                      parsedSelectedItem?.value === parsedItem.value,\n                  }),\n                })}\n              >\n                {parsedItem.label}\n              </div>\n            )\n          })\n        }\n      }}\n    </Downshift>\n  )\n}\n\nconst getDropdownPosition: GetDropdownPositionFn = (target) => {\n  if (target instanceof Element) {\n    const { top, left } = target.getBoundingClientRect()\n    const { scrollY } = window\n    return {\n      top: scrollY + top + 63,\n      left,\n    }\n  }\n\n  return { top: 0, left: 0 }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}