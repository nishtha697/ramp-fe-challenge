{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n\n  // const fetchAll = useCallback(async () => {\n  //   const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n  //     \"paginatedTransactions\",\n  //     {\n  //       page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage,\n  //     }\n  //   )\n  //\n  //   setPaginatedTransactions((previousResponse) => {\n  //     if (response === null || previousResponse === null) {\n  //       return response\n  //     }\n  //\n  //     return { data: [...previousResponse.data, ...response.data], nextPage: response.nextPage }\n  //   })\n  //\n  // }, [fetchWithCache, paginatedTransactions])\n\n  const fetchAll = useCallback(async () => {\n    const response = await fetchWithCache(\"paginatedTransactions\", {\n      page: (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.nextPage) || 0\n    });\n    if (response !== null) {\n      setPaginatedTransactions(previousResponse => {\n        if (previousResponse === null) {\n          return response;\n        }\n        return {\n          data: [...previousResponse.data, ...response.data],\n          nextPage: response.nextPage\n        };\n      });\n      const newApprovalState = response.data.reduce((acc, transaction) => {\n        acc[transaction.id] = transaction.approved;\n        return acc;\n      }, approvalState);\n      setApprovalState(newApprovalState);\n      if (response.nextPage) {\n        return fetchAll();\n      }\n    }\n  }, [fetchWithCache, paginatedTransactions, approvalState]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n_s(usePaginatedTransactions, \"5C7xQHueO9nKLl+7c12EAAA+DoA=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","usePaginatedTransactions","_s","fetchWithCache","loading","paginatedTransactions","setPaginatedTransactions","fetchAll","response","page","nextPage","previousResponse","data","newApprovalState","reduce","acc","transaction","id","approved","approvalState","setApprovalState","invalidateData"],"sources":["/Users/nishthagoswami/Desktop/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\"\nimport { PaginatedTransactionsResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\n\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<\n    Transaction[]\n  > | null>(null)\n\n  // const fetchAll = useCallback(async () => {\n  //   const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n  //     \"paginatedTransactions\",\n  //     {\n  //       page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage,\n  //     }\n  //   )\n  //\n  //   setPaginatedTransactions((previousResponse) => {\n  //     if (response === null || previousResponse === null) {\n  //       return response\n  //     }\n  //\n  //     return { data: [...previousResponse.data, ...response.data], nextPage: response.nextPage }\n  //   })\n  //\n  // }, [fetchWithCache, paginatedTransactions])\n\n  const fetchAll = useCallback(async (): Promise<void> => {\n    const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n      \"paginatedTransactions\",\n      {\n        page: paginatedTransactions?.nextPage || 0,\n      }\n    )\n\n    if (response !== null) {\n      setPaginatedTransactions((previousResponse) => {\n        if (previousResponse === null) {\n          return response;\n        }\n\n        return { data: [...previousResponse.data, ...response.data], nextPage: response.nextPage };\n      })\n\n      const newApprovalState = response.data.reduce((acc: Record<string, boolean>, transaction: Transaction) => {\n        acc[transaction.id] = transaction.approved;\n        return acc;\n      }, approvalState);\n      setApprovalState(newApprovalState);\n\n      if (response.nextPage) {\n        return fetchAll();\n      }\n    }\n  }, [fetchWithCache, paginatedTransactions, approvalState]);\n\n\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null)\n  }, [])\n\n  return { data: paginatedTransactions, loading, fetchAll, invalidateData }\n}\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAG7C,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,SAASC,wBAAwBA,CAAA,EAAgC;EAAAC,EAAA;EACtE,MAAM;IAAEC,cAAc;IAAEC;EAAQ,CAAC,GAAGJ,cAAc,CAAC,CAAC;EACpD,MAAM,CAACK,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGP,QAAQ,CAExD,IAAI,CAAC;;EAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,YAA2B;IACtD,MAAMU,QAAQ,GAAG,MAAML,cAAc,CACnC,uBAAuB,EACvB;MACEM,IAAI,EAAE,CAAAJ,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEK,QAAQ,KAAI;IAC3C,CACF,CAAC;IAED,IAAIF,QAAQ,KAAK,IAAI,EAAE;MACrBF,wBAAwB,CAAEK,gBAAgB,IAAK;QAC7C,IAAIA,gBAAgB,KAAK,IAAI,EAAE;UAC7B,OAAOH,QAAQ;QACjB;QAEA,OAAO;UAAEI,IAAI,EAAE,CAAC,GAAGD,gBAAgB,CAACC,IAAI,EAAE,GAAGJ,QAAQ,CAACI,IAAI,CAAC;UAAEF,QAAQ,EAAEF,QAAQ,CAACE;QAAS,CAAC;MAC5F,CAAC,CAAC;MAEF,MAAMG,gBAAgB,GAAGL,QAAQ,CAACI,IAAI,CAACE,MAAM,CAAC,CAACC,GAA4B,EAAEC,WAAwB,KAAK;QACxGD,GAAG,CAACC,WAAW,CAACC,EAAE,CAAC,GAAGD,WAAW,CAACE,QAAQ;QAC1C,OAAOH,GAAG;MACZ,CAAC,EAAEI,aAAa,CAAC;MACjBC,gBAAgB,CAACP,gBAAgB,CAAC;MAElC,IAAIL,QAAQ,CAACE,QAAQ,EAAE;QACrB,OAAOH,QAAQ,CAAC,CAAC;MACnB;IACF;EACF,CAAC,EAAE,CAACJ,cAAc,EAAEE,qBAAqB,EAAEc,aAAa,CAAC,CAAC;EAG1D,MAAME,cAAc,GAAGvB,WAAW,CAAC,MAAM;IACvCQ,wBAAwB,CAAC,IAAI,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEM,IAAI,EAAEP,qBAAqB;IAAED,OAAO;IAAEG,QAAQ;IAAEc;EAAe,CAAC;AAC3E;AAACnB,EAAA,CA3DeD,wBAAwB;EAAA,QACFD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}