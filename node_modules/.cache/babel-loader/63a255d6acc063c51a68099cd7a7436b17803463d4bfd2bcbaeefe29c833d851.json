{"ast":null,"code":"var _jsxFileName = \"/Users/nishthagoswami/Desktop/ramp-fe-challenge/src/components/Transactions/index.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = ({\n  transactions: initialTransactions\n}) => {\n  _s();\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const [transactions, setTransactions] = useState(initialTransactions);\n  const setTransactionApproval = useCallback(async ({\n    transactionId,\n    newValue\n  }) => {\n    await fetchWithoutCache(\"setTransactionApproval\", {\n      transactionId,\n      value: newValue\n    });\n\n    // Update the approval status in the local state as well.\n    setTransactions(prevTransactions => prevTransactions === null || prevTransactions === void 0 ? void 0 : prevTransactions.map(transaction => transaction.id === transactionId ? {\n      ...transaction,\n      approved: newValue\n    } : transaction));\n  }, [fetchWithoutCache]);\n  if (transactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"klfozYtF5rfpfxm3CRoIgy0llIM=\", false, function () {\n  return [useCustomFetch];\n});\n_c = Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useState","useCustomFetch","TransactionPane","jsxDEV","_jsxDEV","Transactions","transactions","initialTransactions","_s","fetchWithoutCache","loading","setTransactions","setTransactionApproval","transactionId","newValue","value","prevTransactions","map","transaction","id","approved","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nishthagoswami/Desktop/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\"\nimport { SetTransactionApprovalParams, Transaction } from \"src/utils/types\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\n\nexport const Transactions: TransactionsComponent = ({ transactions: initialTransactions }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch()\n  const [transactions, setTransactions] = useState<Transaction[] | null>(initialTransactions)\n\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue,\n      })\n\n      // Update the approval status in the local state as well.\n      setTransactions(prevTransactions => prevTransactions?.map(transaction =>\n        transaction.id === transactionId ? { ...transaction, approved: newValue } : transaction\n      ))\n    },\n    [fetchWithoutCache]\n  )\n\n  if (transactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {transactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,SAASC,cAAc,QAAQ,0BAA0B;AAEzD,SAASC,eAAe,QAAQ,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnD,OAAO,MAAMC,YAAmC,GAAGA,CAAC;EAAEC,YAAY,EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EAC5F,MAAM;IAAEC,iBAAiB;IAAEC;EAAQ,CAAC,GAAGT,cAAc,CAAC,CAAC;EACvD,MAAM,CAACK,YAAY,EAAEK,eAAe,CAAC,GAAGX,QAAQ,CAAuBO,mBAAmB,CAAC;EAG3F,MAAMK,sBAAsB,GAAGb,WAAW,CACxC,OAAO;IAAEc,aAAa;IAAEC;EAAS,CAAC,KAAK;IACrC,MAAML,iBAAiB,CAAqC,wBAAwB,EAAE;MACpFI,aAAa;MACbE,KAAK,EAAED;IACT,CAAC,CAAC;;IAEF;IACAH,eAAe,CAACK,gBAAgB,IAAIA,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEC,GAAG,CAACC,WAAW,IACnEA,WAAW,CAACC,EAAE,KAAKN,aAAa,GAAG;MAAE,GAAGK,WAAW;MAAEE,QAAQ,EAAEN;IAAS,CAAC,GAAGI,WAC9E,CAAC,CAAC;EACJ,CAAC,EACD,CAACT,iBAAiB,CACpB,CAAC;EAED,IAAIH,YAAY,KAAK,IAAI,EAAE;IACzB,oBAAOF,OAAA;MAAKiB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjE;EAEA,oBACEtB,OAAA;IAAK,eAAY,uBAAuB;IAAAkB,QAAA,EACrChB,YAAY,CAACW,GAAG,CAAEC,WAAW,iBAC5Bd,OAAA,CAACF,eAAe;MAEdgB,WAAW,EAAEA,WAAY;MACzBR,OAAO,EAAEA,OAAQ;MACjBE,sBAAsB,EAAEA;IAAuB,GAH1CM,WAAW,CAACC,EAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIpB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAlB,EAAA,CApCYH,YAAmC;EAAA,QACPJ,cAAc;AAAA;AAAA0B,EAAA,GAD1CtB,YAAmC;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}