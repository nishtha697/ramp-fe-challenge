{"ast":null,"code":"var _jsxFileName = \"/Users/nishthagoswami/Desktop/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx\",\n  _s = $RefreshSig$();\nimport { InputCheckbox } from \"../InputCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionPane = ({\n  transaction,\n  loading,\n  setTransactionApproval,\n  approved,\n  setApproved\n}) => {\n  _s();\n  useEffect(() => {\n    setApproved(transaction.id, transaction.approved); // Set initial approved status when component mounts\n  }, [transaction.id, transaction.approved, setApproved]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampPane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampPane--content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText\",\n        children: [transaction.merchant, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: moneyFormatter.format(transaction.amount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText--hushed RampText--s\",\n        children: [transaction.employee.firstName, \" \", transaction.employee.lastName, \" - \", transaction.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputCheckbox, {\n      id: transaction.id,\n      checked: approved,\n      disabled: loading,\n      onChange: async newValue => {\n        await setTransactionApproval({\n          transactionId: transaction.id,\n          newValue\n        });\n        setApproved(newValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionPane, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TransactionPane;\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n});\nvar _c;\n$RefreshReg$(_c, \"TransactionPane\");","map":{"version":3,"names":["InputCheckbox","jsxDEV","_jsxDEV","TransactionPane","transaction","loading","setTransactionApproval","approved","setApproved","_s","useEffect","id","className","children","merchant","fileName","_jsxFileName","lineNumber","columnNumber","moneyFormatter","format","amount","employee","firstName","lastName","date","checked","disabled","onChange","newValue","transactionId","_c","Intl","NumberFormat","style","currency","$RefreshReg$"],"sources":["/Users/nishthagoswami/Desktop/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport { InputCheckbox } from \"../InputCheckbox\"\nimport { TransactionPaneComponent } from \"./types\"\n\nexport const TransactionPane: TransactionPaneComponent = ({\n  transaction,\n  loading,\n                                                            setTransactionApproval,\n                                                            approved,\n                                                            setApproved\n}) => {\n\n  useEffect(() => {\n    setApproved(transaction.id, transaction.approved)  // Set initial approved status when component mounts\n  }, [transaction.id, transaction.approved, setApproved])\n\n  return (\n    <div className=\"RampPane\">\n      <div className=\"RampPane--content\">\n        <p className=\"RampText\">{transaction.merchant} </p>\n        <b>{moneyFormatter.format(transaction.amount)}</b>\n        <p className=\"RampText--hushed RampText--s\">\n          {transaction.employee.firstName} {transaction.employee.lastName} - {transaction.date}\n        </p>\n      </div>\n      <InputCheckbox\n        id={transaction.id}\n        checked={approved}\n        disabled={loading}\n        onChange={async (newValue) => {\n          await setTransactionApproval({\n            transactionId: transaction.id,\n            newValue,\n          })\n          setApproved(newValue)\n        }}\n      />\n    </div>\n  )\n}\n\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n})\n"],"mappings":";;AACA,SAASA,aAAa,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhD,OAAO,MAAMC,eAAyC,GAAGA,CAAC;EACxDC,WAAW;EACXC,OAAO;EACmDC,sBAAsB;EACtBC,QAAQ;EACRC;AAC5D,CAAC,KAAK;EAAAC,EAAA;EAEJC,SAAS,CAAC,MAAM;IACdF,WAAW,CAACJ,WAAW,CAACO,EAAE,EAAEP,WAAW,CAACG,QAAQ,CAAC,EAAE;EACrD,CAAC,EAAE,CAACH,WAAW,CAACO,EAAE,EAAEP,WAAW,CAACG,QAAQ,EAAEC,WAAW,CAAC,CAAC;EAEvD,oBACEN,OAAA;IAAKU,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBX,OAAA;MAAKU,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCX,OAAA;QAAGU,SAAS,EAAC,UAAU;QAAAC,QAAA,GAAET,WAAW,CAACU,QAAQ,EAAC,GAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnDhB,OAAA;QAAAW,QAAA,EAAIM,cAAc,CAACC,MAAM,CAAChB,WAAW,CAACiB,MAAM;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDhB,OAAA;QAAGU,SAAS,EAAC,8BAA8B;QAAAC,QAAA,GACxCT,WAAW,CAACkB,QAAQ,CAACC,SAAS,EAAC,GAAC,EAACnB,WAAW,CAACkB,QAAQ,CAACE,QAAQ,EAAC,KAAG,EAACpB,WAAW,CAACqB,IAAI;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNhB,OAAA,CAACF,aAAa;MACZW,EAAE,EAAEP,WAAW,CAACO,EAAG;MACnBe,OAAO,EAAEnB,QAAS;MAClBoB,QAAQ,EAAEtB,OAAQ;MAClBuB,QAAQ,EAAE,MAAOC,QAAQ,IAAK;QAC5B,MAAMvB,sBAAsB,CAAC;UAC3BwB,aAAa,EAAE1B,WAAW,CAACO,EAAE;UAC7BkB;QACF,CAAC,CAAC;QACFrB,WAAW,CAACqB,QAAQ,CAAC;MACvB;IAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAT,EAAA,CAnCYN,eAAyC;AAAA4B,EAAA,GAAzC5B,eAAyC;AAqCtD,MAAMgB,cAAc,GAAG,IAAIa,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EACpDC,KAAK,EAAE,UAAU;EACjBC,QAAQ,EAAE;AACZ,CAAC,CAAC;AAAA,IAAAJ,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}